plugins {
	id 'java'
	id 'org.springframework.boot' version '3.2.3'  // 현재 최신 안정 버전
	id 'io.spring.dependency-management' version '1.1.6'
	id 'com.google.cloud.tools.jib' version '3.4.0'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
	maven { url 'https://jitpack.io' }  // iamport를 위한 저장소 추가
}

ext {
	set('springCloudVersion', "2023.0.0")  // Spring Cloud 버전 지정
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.security:spring-security-config'
	implementation 'org.springframework.security:spring-security-core'
	implementation 'org.springframework.boot:spring-boot-starter-data-redis'
	implementation 'org.springframework.session:spring-session-data-redis'
	implementation 'org.springframework.boot:spring-boot-starter-webflux'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'com.github.iamport:iamport-rest-client-java:0.2.21'
	implementation 'org.springframework.boot:spring-boot-starter-data-mongodb'
	implementation 'org.springframework.boot:spring-boot-starter-data-rest'

	// 명시적인 Jackson 의존성 제거 (Spring Boot의 의존성 관리 활용)
	implementation 'com.theokanning.openai-gpt3-java:api:0.18.2'
	implementation 'com.theokanning.openai-gpt3-java:client:0.18.2'
	implementation 'com.theokanning.openai-gpt3-java:service:0.18.2'

	implementation 'com.fasterxml.jackson.core:jackson-databind'
	implementation 'com.fasterxml.jackson.core:jackson-core'
	implementation 'com.fasterxml.jackson.core:jackson-annotations'
	implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jdk8'
	implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310'
	implementation 'com.fasterxml.jackson.module:jackson-module-parameter-names'
	// 쿠버네티스 환경에서 필요한 의존성들
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.cloud:spring-cloud-starter-kubernetes-client'
	implementation 'org.springframework.cloud:spring-cloud-starter-kubernetes-client-config'

	// kafka
	implementation 'org.springframework.kafka:spring-kafka'
	testImplementation 'org.springframework.kafka:spring-kafka-test'
	testImplementation 'org.awaitility:awaitility:4.2.0'  // 비동기 테스트를 위한 라이브러리

	//RabbitMQ
	implementation 'org.springframework.boot:spring-boot-starter-amqp'

	implementation 'io.jsonwebtoken:jjwt-api:0.12.6'
	runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.12.6'
	runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.12.6'

	testImplementation 'org.springframework.security:spring-security-test'
	testImplementation 'org.junit.jupiter:junit-jupiter-api:5.10.0'
	testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.10.0'
	testImplementation 'org.junit.platform:junit-platform-commons:1.10.0'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher:1.10.0'
	testImplementation 'org.mockito:mockito-junit-jupiter:4.5.1'
	testImplementation 'org.assertj:assertj-core:3.22.0'
	// Kafka 테스트 관련 의존성
	testImplementation 'org.testcontainers:kafka'
	testImplementation 'org.awaitility:awaitility'

	implementation 'com.auth0:java-jwt:4.2.1'

	// 추가적인 유용한 라이브러리들
	implementation 'org.apache.commons:commons-lang3'
	implementation 'com.google.guava:guava:30.1.1-jre'
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.jsoup:jsoup:1.15.3'


	implementation 'org.springframework.cloud:spring-cloud-starter-kubernetes-client'
	implementation 'org.springframework.cloud:spring-cloud-starter-kubernetes-client-config'

	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	implementation 'org.mapstruct:mapstruct:1.4.2.Final'
	annotationProcessor 'org.mapstruct:mapstruct-processor:1.4.2.Final'
	runtimeOnly 'org.postgresql:postgresql'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

tasks.named('test') {
	useJUnitPlatform()
}